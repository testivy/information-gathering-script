// Addons List: https://docs.proxyman.io/scripting/addons
const {
  sayHello
} = require("@addons/HelloWorld.js");

///
/// This func is called if the Request Checkbox is Enabled
/// You can manipulate the Request Data here before the request hits on the server
/// Ex: Add/Update/Remove: host, schema, port, path, headers, queries and body (json, form, plain-text, base64 encoded string...)
/// Use console.log(request) to see all available fields
/// You can import a JSON file and use in the script. Action Menu -> Import File
/// Use global object `sharedState` to share data between onRequest and onResponse. Ex: sharedState.data = "My-Data"
///
function onRequest(context, url, request) {
  // console.log(request);
  console.log(sayHello());

  return request;
}

///
/// This func is called if the Response Checkbox is Enabled
/// You can manipulate the Response Data here before it goes to the client
/// Ex: Add/Update/Remove: headers, statusCode and body (json, plain-text, base64 encoded string)
/// Use console.log(response) to see all available fields
///
function onResponse(context, url, request, response) {

  if (response.body == undefined) {

    console.log(response.body)
    return response;

  }
  let response_body = response.body;

  if (response.headers['Content-Type'] != undefined && response.headers['Content-Type'].search("application/json") != -1) {

    response_body2string = JSON.stringify(response_body)
  } else {

    response_body2string = response_body.toString();
  }

  let path_reg = /("|')(\/[0-9a-zA-Z.]).*?("|')|(["|'](\/v[1-9].*?)")|(["|'](\/api.*?)")/g;
  // \b is needed here for full match 
  let phone_reg = /\b(13[0-9]|14[5|7]|(15[^4])\d{3}|17[6-9]|18[0-9])\d{8}\b/g;
  let IDCard_reg = /\b\d{6}(18|19|20)?\d{2}(0[1-9]|1[12])(0[1-9]|[12]\d|3[01])\d{3}(\d|X)\b/g;
  //百家姓方式 覆盖 赵钱孙李周吴郑王
  let chineseName_reg = /[\u8d75|\u94b1|\u5b59|\u674e|\u5468|\u5434|\uff5c|\u90d1|\uff5c|\u738b|\u76db|\u51af|\u9648|\u891a|\u536b|\u848b|\u6c88|\u97e9|\u6768][\u4e00-\u9fa5]{1,3}/g;
  let  email_reg = /\w{3,12}@\w{1,5}\.[a-z]{2,3}/g;

  var interface = response_body2string.match(path_reg);
  var phone = response_body2string.match(phone_reg);
  var IDCard = response_body2string.match(IDCard_reg);
  var chineseName = response_body2string.match(chineseName_reg);
  var email = response_body2string.match(email_reg);
  
  response.comment = "";

  // remove same items
  var interface_no_duplicate = [...new Set(interface)];

 // remove same items
  var phone_no_duplicate = [...new Set(phone)];

  // remove same items
  var IDCard_no_duplicate = [...new Set(IDCard)];
  
  // remove same items
  var chineseName_no_duplicate = [...new Set(chineseName)];
  
  // remove same items
  var email_no_duplicate = [...new Set(email)];

  if (interface_no_duplicate.length > 2) {
    var host_reg = /^http(s)?:\/\/(.*?)\//;
    let host_from_referer = host_reg.exec(request.headers["Referer"]);
    // red, blue, yellow, purple, gray, green 
    response.color = "yellow";
    response.comment = "---interface information list--- " + interface_no_duplicate.length + " counts\r\n" + interface_no_duplicate.toString().replaceAll(",", "\r\n");
    // write to file 
    writeToFile(interface_no_duplicate.toString().replaceAll(",", "\r\n"), "~/Desktop/sample/" + host_from_referer[2] + context.flow.id + ".txt");

  }

  let PRIVACY_COMMENT_TITLE = "\n---privacy information---";
  // if not with "+" syntax ,no comments in yellow
 
  if (phone_no_duplicate.length > 0) {
    response.color = "red";
    response.comment += PRIVACY_COMMENT_TITLE;
    response.comment += "\r\n *Phone Number detected: \n"
    response.comment += phone_no_duplicate.toString();
    response.comment += "\n"

  }
  if (IDCard_no_duplicate.length > 0) {
    response.color = "red";
    response.comment.includes(PRIVACY_COMMENT_TITLE) ? null : (response.comment += PRIVACY_COMMENT);
    response.comment += "\r\n *IDCard Number detected: \n";
    response.comment += IDCard_no_duplicate.toString();
    response.comment += "\n";
  }
if (chineseName_no_duplicate.length > 0) {
    response.color = "blue";
    response.comment.includes(PRIVACY_COMMENT_TITLE) ? null : (response.comment += PRIVACY_COMMENT);
    response.comment += "\r\n *Chinese Name  detected: \n";
    response.comment += chineseName_no_duplicate.toString();
    response.comment += "\n";
  }
if (email_no_duplicate.length > 0) {
    response.color = "red";
    response.comment.includes(PRIVACY_COMMENT_TITLE) ? null : (response.comment += PRIVACY_COMMENT);
    response.comment += "\r\n *Email  detected: \n";
    response.comment += email_no_duplicate.toString();
    response.comment += "\n";
  }
  return response;
}
